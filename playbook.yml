---
######### Zulip
- name: Zulip
  hosts: localhost
  connection: local
  tasks:
    - name: Download zulip asc
      ansible.builtin.get_url:
        url: https://download.zulip.com/desktop/apt/zulip-desktop.asc
        dest: /etc/apt/trusted.gpg.d/zulip-desktop.asc
      become: true
      become_method: sudo

    - name: Add zulip repo
      ansible.builtin.shell: |
        echo "deb https://download.zulip.com/desktop/apt stable main" | sudo tee /etc/apt/sources.list.d/zulip-desktop.list
      become: true
      become_method: sudo

    - name: Update repositories cache and install "zulip" package
      ansible.builtin.apt:
        name: zulip
        update_cache: yes
      become: true
      become_method: sudo

######### Vscode
- name: Vscode
  hosts: localhost
  connection: local
  tasks:
    - name: Download vscode package
      ansible.builtin.get_url:
        url: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
        dest: "{{ ansible_env.HOME }}/Downloads/vscode.deb"
      become: true
      become_method: sudo

    - name: Install vscode .deb package
      ansible.builtin.apt:
        deb: "{{ ansible_env.HOME }}/Downloads/vscode.deb"
      become: true
      become_method: sudo

######### Google Chrome
- name: Google Chrome
  hosts: localhost
  connection: local
  tasks:
    - name: Download google chrome package
      ansible.builtin.get_url:
        url: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        dest: "{{ ansible_env.HOME }}/Downloads/google-chrome.deb"
      become: true
      become_method: sudo

    - name: Install google chrome .deb package
      ansible.builtin.apt:
        deb: "{{ ansible_env.HOME }}/Downloads/google-chrome.deb"
      become: true
      become_method: sudo

######### Postman
- name: Postman
  hosts: localhost
  connection: local
  tasks:
    - name: Download postman archive
      ansible.builtin.get_url:
        url: https://dl.pstmn.io/download/latest/linux_64
        dest: "{{ ansible_env.HOME }}/Downloads/postman.tar.gz"

    - name: Extract postman.tar.gz
      ansible.builtin.unarchive:
        src: "{{ ansible_env.HOME }}/Downloads/postman.tar.gz"
        dest: /opt/
        remote_src: yes
      become: true
      become_method: sudo

    # Application only ,no desktop icon
    - name: Create Postman Desktop Application
      ansible.builtin.copy:
        dest: "/usr/share/applications/postman.desktop"
        content: |
          [Desktop Entry]
          Encoding=UTF-8
          Name=Postman
          Exec=/opt/Postman/app/Postman %U
          Icon=/opt/Postman/app/resources/app/assets/icon.png
          Terminal=false
          Type=Application
          Categories=Development;
      become: true
      become_method: sudo

######### Telegram
- name: Telegram
  hosts: localhost
  connection: local
  tasks:
    - name: Download telegram archive
      ansible.builtin.get_url:
        url: https://telegram.org/dl/desktop/linux
        dest: "{{ ansible_env.HOME }}/Downloads/tsetup.tar.xz"

    - name: Extract telegram.tar.xz
      ansible.builtin.unarchive:
        src: "{{ ansible_env.HOME }}/Downloads/tsetup.tar.xz"
        dest: /opt/
        remote_src: yes
      become: true
      become_method: sudo

    # Application only without desktop icon
    - name: Create Telegram Desktop Application
      ansible.builtin.copy:
        dest: "/usr/share/applications/telegram.desktop"
        content: |
          [Desktop Entry]
          Encoding=UTF-8
          Name=Telegram
          Exec=/opt/Telegram/Telegram %U
          Icon=telegram
          Terminal=false
          Type=Application
          Categories=Development;
      become: true
      become_method: sudo

######### Create Linux Desktop Icon Shorcut
- name: Desktop Shorcut
  hosts: localhost
  connection: local
  tasks:
    - name: Copy Application File into Desktop
      ansible.builtin.shell: |
        cp /usr/share/applications/code.desktop "{{ ansible_env.HOME }}/Desktop"
        cp /usr/share/applications/google-chrome.desktop "{{ ansible_env.HOME }}/Desktop"
        cp /usr/share/applications/telegram.desktop "{{ ansible_env.HOME }}/Desktop"
        cp /usr/share/applications/postman.desktop "{{ ansible_env.HOME }}/Desktop"
        cp /usr/share/applications/zulip.desktop "{{ ansible_env.HOME }}/Desktop"
    
    - name: lookup files with a certain pattern
      find:
        paths: "{{ ansible_env.HOME }}/Desktop/"
        file_type: file
        patterns: "*.desktop"
      register: filelist

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: "{{ item.path }}"
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        mode: '750'
      with_items: "{{ filelist.files }}"

    - name: Mark Application Trusted
      ansible.builtin.shell: |
        gio set {{ ansible_env.HOME }}/Desktop/code.desktop metadata::trusted true
        gio set {{ ansible_env.HOME }}/Desktop/google-chrome.desktop metadata::trusted true
        gio set {{ ansible_env.HOME }}/Desktop/telegram.desktop metadata::trusted true
        gio set {{ ansible_env.HOME }}/Desktop/postman.desktop metadata::trusted true
        gio set {{ ansible_env.HOME }}/Desktop/zulip.desktop metadata::trusted true